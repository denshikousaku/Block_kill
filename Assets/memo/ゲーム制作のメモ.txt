ゲーム制作のメモ


属性(レイヤー)
if文中心ではなくイベント中心にする
変数名は長くてもわかりやすい名前にする
スクリプトを呼び出した時点で、オブジェクトやプレハブを取得する

HPをUIにする
_isLeftMoveを_isRightMoveにする
Bキーで隣接するブロックを持ち上げるの条件をblockO == nullにする
Keycode.B?

衝突判定の瞬間移動、Destroy問題
他のオブジェクトに触れると削除されるオブジェクト同士がぶつかると、
触れた瞬間削除されるので、触れたかどうか判定できない。
つまり、どちらか一方は削除されるが、もう一方は削除されない。
関数の引数の値によって、処理が分岐する仕組みは役に立つのか?

スクリプトを呼び出したゲームオブジェクトの取得は、
private GameObject _GAMEOBJECT;

_GAMEOBJECT = gameObject;
で行える。

自身のオブジェクトを移動させるときはvelocityやpositionを変更する
力の威力によって、移動の度合いを変えたいときは、AddForceを使う

自身が瞬間移動したり、削除されたりするときは、触れているオブジェクトに、メッセージを送る。
メッセージを送ると、リストからそのオブジェクトを削除する。

クラスをインスタンスしたものをオブジェクトと呼ぶ
それぞれのオブジェクトにメッセージを送ると、それぞれのプロパティによって、異なる振る舞いをする
例えば、rigidbodyのコンポーネントを持つゲームオブジェクトに、AddForceのメッセージを送ると、
massの値によって、velocityの値が変化する

HPはクラスにしたい。多くのゲームオブジェクトがHPを持っているから
HPはscriptコンポーネントを使って、ユーザーコンポーネント的な感じにしたい。
各パラメーターをunityの画面で設定できるようにしたい
ゲーム中に、ブロックを選択できるようにしたい

ブロックのオブジェクトは同じレイヤーにし、各種のブロックはtagで区別する

どのようなコードを書くかには理由がなければいけない。その理由は、「仕様通りの動作をさせるため」ではない。
「ライトセイバーの攻撃範囲が決まっているから、剣戟の終了は、ライトセイバーの角度で判定する」などである。